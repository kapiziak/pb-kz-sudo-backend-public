{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "Description",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:2222/"
        }
    ],
    "paths": {
        "/api-docs/swagger.json": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "User is logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "hello@kzakrzewski.pl"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "VISITOR"
                                                        },
                                                        "profile": {
                                                            "type": "object",
                                                            "properties": {}
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "email",
                                                        "role"
                                                    ]
                                                }
                                            },
                                            "required": ["user"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "hello@kzakrzewski.pl"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "VISITOR"
                                                        },
                                                        "profile": {
                                                            "type": "object",
                                                            "properties": {}
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "email",
                                                        "role"
                                                    ]
                                                }
                                            },
                                            "required": ["user"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful login.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "some-token"
                                                },
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "hello@kzakrzewski.pl"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "VISITOR"
                                                        },
                                                        "profile": {
                                                            "type": "object",
                                                            "properties": {}
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "email",
                                                        "role"
                                                    ]
                                                }
                                            },
                                            "required": ["token", "user"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "some-token"
                                                },
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "hello@kzakrzewski.pl"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "VISITOR"
                                                        },
                                                        "profile": {
                                                            "type": "object",
                                                            "properties": {}
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "email",
                                                        "role"
                                                    ]
                                                }
                                            },
                                            "required": ["token", "user"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "AUTH_MISSING_CREDENTIALS"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Missing credentials"
                                                }
                                            },
                                            "required": ["code", "message"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "AUTH_MISSING_CREDENTIALS"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Missing credentials"
                                                }
                                            },
                                            "required": ["code", "message"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not found or credentials are invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "some-time"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "AUTH_LOGIN_FAILURE"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": ""
                                                }
                                            },
                                            "required": ["code", "message"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "some-time"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "AUTH_LOGIN_FAILURE"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": ""
                                                }
                                            },
                                            "required": ["code", "message"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "login": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "$login": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/auth/password/change": {
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Password changed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "affectedUserId": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "result": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "required": [
                                                "affectedUserId",
                                                "result"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "affectedUserId": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "result": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "required": [
                                                "affectedUserId",
                                                "result"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "newPassword": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "hello@kzakrzewski.pl"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "VISITOR"
                                                            },
                                                            "profile": {
                                                                "type": "object",
                                                                "properties": {}
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "email",
                                                            "role"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": ["users"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "hello@kzakrzewski.pl"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "VISITOR"
                                                            },
                                                            "profile": {
                                                                "type": "object",
                                                                "properties": {}
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "email",
                                                            "role"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": ["users"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/facilities/": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all facilities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "facilities": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Facility"
                                                    }
                                                }
                                            },
                                            "required": ["facilities"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "facilities": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Facility"
                                                    }
                                                }
                                            },
                                            "required": ["facilities"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Facility successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "facility": {
                                                    "$ref": "#/components/schemas/Facility"
                                                }
                                            },
                                            "required": ["facility"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "facility": {
                                                    "$ref": "#/components/schemas/Facility"
                                                }
                                            },
                                            "required": ["facility"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/facilities/{facilityId}": {
            "get": {
                "description": "",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single facility",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "facility": {
                                                    "$ref": "#/components/schemas/Facility"
                                                }
                                            },
                                            "required": ["facility"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "facility": {
                                                    "$ref": "#/components/schemas/Facility"
                                                }
                                            },
                                            "required": ["facility"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "description": "",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "facility": {
                                                    "$ref": "#/components/schemas/Facility"
                                                }
                                            },
                                            "required": ["facility"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "facility": {
                                                    "$ref": "#/components/schemas/Facility"
                                                }
                                            },
                                            "required": ["facility"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility removed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deletedId": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "required": ["deletedId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deletedId": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "required": ["deletedId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/facilities/{facilityId}/occupancies": {
            "get": {
                "description": "",
                "parameters": [
                    {
                        "name": "facilityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility occupied status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "isOccupied": {
                                                    "type": "string",
                                                    "example": "true"
                                                },
                                                "occupancies": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/FacilityOccupancy"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "isOccupied",
                                                "occupancies"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "isOccupied": {
                                                    "type": "string",
                                                    "example": "true"
                                                },
                                                "occupancies": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/FacilityOccupancy"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "isOccupied",
                                                "occupancies"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/facilities/release/{id}": {
            "post": {
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility released",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "isOccupied": {
                                                    "type": "string",
                                                    "example": "false"
                                                }
                                            },
                                            "required": ["isOccupied"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "isOccupied": {
                                                    "type": "string",
                                                    "example": "false"
                                                }
                                            },
                                            "required": ["isOccupied"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/authorizations/": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all authorizations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Authorization"
                                                    }
                                                }
                                            },
                                            "required": ["authorizations"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Authorization"
                                                    }
                                                }
                                            },
                                            "required": ["authorizations"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Authorization added.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorization": {
                                                    "$ref": "#/components/schemas/Authorization"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorization": {
                                                    "$ref": "#/components/schemas/Authorization"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "expireAt": {
                                        "example": "any"
                                    },
                                    "assignedUsers": {
                                        "example": "any"
                                    },
                                    "scopeFacility": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/authorizations/my-authorizations": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of user authorizations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Authorization"
                                                    }
                                                }
                                            },
                                            "required": ["authorizations"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Authorization"
                                                    }
                                                }
                                            },
                                            "required": ["authorizations"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/authorizations/{authorizationId}": {
            "get": {
                "description": "",
                "parameters": [
                    {
                        "name": "authorizationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single authorization.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorization": {
                                                    "$ref": "#/components/schemas/Authorization"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorization": {
                                                    "$ref": "#/components/schemas/Authorization"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "description": "",
                "parameters": [
                    {
                        "name": "authorizationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authorization updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorization": {
                                                    "$ref": "#/components/schemas/Authorization"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorization": {
                                                    "$ref": "#/components/schemas/Authorization"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "expireAt": {
                                        "example": "any"
                                    },
                                    "assignedUsers": {
                                        "example": "any"
                                    },
                                    "scopeFacility": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "",
                "parameters": [
                    {
                        "name": "authorizationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authorization removed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deletedId": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deletedId": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/super-id/": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Current users superId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "superId": {
                                                    "$ref": "#/components/schemas/SuperId"
                                                }
                                            },
                                            "required": ["superId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "superId": {
                                                    "$ref": "#/components/schemas/SuperId"
                                                }
                                            },
                                            "required": ["superId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User has no superId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "GET_SUPER_ID_NOT_FOUND"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "SuperId assigned to your account not found"
                                                }
                                            },
                                            "required": ["code", "message"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "GET_SUPER_ID_NOT_FOUND"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "SuperId assigned to your account not found"
                                                }
                                            },
                                            "required": ["code", "message"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Created superId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "superId": {
                                                    "$ref": "#/components/schemas/SuperId"
                                                }
                                            },
                                            "required": ["superId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "superId": {
                                                    "$ref": "#/components/schemas/SuperId"
                                                }
                                            },
                                            "required": ["superId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "validTo": {
                                        "type": "number"
                                    },
                                    "pin": {
                                        "type": "string"
                                    },
                                    "studentId": {
                                        "type": "string"
                                    },
                                    "identityCardId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Updated superId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "superId": {
                                                    "$ref": "#/components/schemas/SuperId"
                                                }
                                            },
                                            "required": ["superId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "superId": {
                                                    "$ref": "#/components/schemas/SuperId"
                                                }
                                            },
                                            "required": ["superId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "identityCardId": {
                                        "example": "any"
                                    },
                                    "pin": {
                                        "example": "any"
                                    },
                                    "studentId": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/super-id/revoke": {
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Revoked superId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "revokedId": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "required": ["revokedId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "revokedId": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "required": ["revokedId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/super-id/useSecret": {
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Challenge created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "challengeId": {
                                                    "type": "string",
                                                    "example": "uuidv4"
                                                },
                                                "identityCardId": {
                                                    "type": "string",
                                                    "example": "AAABBBCCC"
                                                },
                                                "studentId": {
                                                    "type": "string",
                                                    "example": "AAABBBCCC"
                                                },
                                                "userId": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "required": [
                                                "challengeId",
                                                "identityCardId",
                                                "studentId",
                                                "userId"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "challengeId": {
                                                    "type": "string",
                                                    "example": "uuidv4"
                                                },
                                                "identityCardId": {
                                                    "type": "string",
                                                    "example": "AAABBBCCC"
                                                },
                                                "studentId": {
                                                    "type": "string",
                                                    "example": "AAABBBCCC"
                                                },
                                                "userId": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "required": [
                                                "challengeId",
                                                "identityCardId",
                                                "studentId",
                                                "userId"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "secret": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/super-id/challenge/": {
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Challenge response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AuthorizationExtendedFacilities"
                                                    }
                                                },
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "hello@kzakrzewski.pl"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "VISITOR"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "email",
                                                        "role"
                                                    ]
                                                },
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": [
                                                "authorizations",
                                                "user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "authorizations": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/AuthorizationExtendedFacilities"
                                                    }
                                                },
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "hello@kzakrzewski.pl"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "VISITOR"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "email",
                                                        "role"
                                                    ]
                                                },
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": [
                                                "authorizations",
                                                "user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "challengeId": {
                                        "example": "any"
                                    },
                                    "pin": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entry/": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entries": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Entry"
                                                    }
                                                }
                                            },
                                            "required": ["entries"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entries": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Entry"
                                                    }
                                                }
                                            },
                                            "required": ["entries"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "New entry added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entry": {
                                                    "$ref": "#/components/schemas/Entry"
                                                }
                                            },
                                            "required": ["entry"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entry": {
                                                    "$ref": "#/components/schemas/Entry"
                                                }
                                            },
                                            "required": ["entry"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "facilities": {
                                        "example": "any"
                                    },
                                    "occupierId": {
                                        "example": "any"
                                    },
                                    "authorizationId": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/entry/{id}": {
            "get": {
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entry found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entry": {
                                                    "$ref": "#/components/schemas/Entry"
                                                }
                                            },
                                            "required": ["entry"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entry": {
                                                    "$ref": "#/components/schemas/Entry"
                                                }
                                            },
                                            "required": ["entry"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/entry/release/{id}": {
            "post": {
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entry released",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entry": {
                                                    "$ref": "#/components/schemas/Entry"
                                                }
                                            },
                                            "required": ["entry"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "entry": {
                                                    "$ref": "#/components/schemas/Entry"
                                                }
                                            },
                                            "required": ["entry"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/statistics/all": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "All statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "activeAuthorizations": {
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "todayEntries": {
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "occupiedFacilities": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "required": [
                                                "activeAuthorizations",
                                                "todayEntries",
                                                "occupiedFacilities"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "activeAuthorizations": {
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "todayEntries": {
                                                    "type": "number",
                                                    "example": 1
                                                },
                                                "occupiedFacilities": {
                                                    "type": "number",
                                                    "example": 1
                                                }
                                            },
                                            "required": [
                                                "activeAuthorizations",
                                                "todayEntries",
                                                "occupiedFacilities"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/profile/": {
            "get": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "User profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Created user profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "example": "any"
                                    },
                                    "surname": {
                                        "example": "any"
                                    },
                                    "description": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Updated user profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "example": "any"
                                    },
                                    "surname": {
                                        "example": "any"
                                    },
                                    "description": {
                                        "example": "any"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Deleted user profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deletedId": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "required": ["deletedId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deletedId": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "required": ["deletedId"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/profile/{userId}": {
            "get": {
                "description": "",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/profile/avatar/": {
            "post": {
                "description": "",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "description": "Avatar file",
                        "schema": {
                            "type": "file"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "serverTime": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            },
                                            "required": ["profile"]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "serverTime",
                                        "data"
                                    ],
                                    "xml": {
                                        "name": "main"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["success", "error"]
                    },
                    "serverTime": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "data": {
                        "type": "object",
                        "properties": {}
                    }
                },
                "required": ["status", "serverTime", "data"],
                "xml": {
                    "name": "ApiResponse"
                }
            },
            "ApiError": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "serverTime": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "example": "string"
                            },
                            "message": {
                                "type": "string",
                                "example": "string"
                            }
                        }
                    }
                },
                "required": ["status", "serverTime", "data"],
                "xml": {
                    "name": "ApiError"
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "email": {
                        "type": "string",
                        "example": "hello@kzakrzewski.pl"
                    },
                    "role": {
                        "xml": {
                            "name": "role"
                        },
                        "$ref": "#/components/schemas/Role"
                    },
                    "profile": {
                        "xml": {
                            "name": "profile"
                        },
                        "$ref": "#/components/schemas/Profile"
                    }
                },
                "required": ["id", "email", "role"],
                "xml": {
                    "name": "User"
                }
            },
            "Facility": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Facility name"
                    },
                    "occupancy": {
                        "type": "array",
                        "items": {
                            "xml": {
                                "name": "facilityoccupancy"
                            },
                            "$ref": "#/components/schemas/FacilityOccupancy"
                        }
                    }
                },
                "required": ["id", "name", "occupancy"],
                "xml": {
                    "name": "Facility"
                }
            },
            "Role": {
                "type": "string",
                "enum": ["ADMIN", "USER", "VISITOR"],
                "xml": {
                    "name": "Role"
                }
            },
            "Profile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "Kacper"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Zakrzewski"
                    },
                    "description": {
                        "type": "string",
                        "example": "I'm a programmer"
                    },
                    "userId": {
                        "type": "string",
                        "example": "1"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "example": "https://kzakrzewski.pl/avatar.png"
                    }
                },
                "required": [
                    "id",
                    "firstName",
                    "surname",
                    "description",
                    "userId"
                ],
                "xml": {
                    "name": "Profile"
                }
            },
            "Authorization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "scopeFacility": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Facility name"
                                }
                            },
                            "required": ["id", "name"]
                        }
                    },
                    "assignedUsers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "hello@kzakrzewski.pl"
                                }
                            },
                            "required": ["id", "email"]
                        }
                    },
                    "createdAt": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "expireAt": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "createdByUserId": {
                        "type": "string",
                        "example": "1"
                    },
                    "createdBy": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "example": "hello@kzakrzewski.pl"
                            }
                        },
                        "required": ["email"]
                    }
                },
                "required": [
                    "id",
                    "scopeFacility",
                    "assignedUsers",
                    "createdAt",
                    "expireAt",
                    "createdByUserId",
                    "createdBy"
                ],
                "xml": {
                    "name": "Authorization"
                }
            },
            "AuthorizationExtendedFacilities": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "scopeFacility": {
                        "type": "array",
                        "items": {
                            "xml": {
                                "name": "facility"
                            },
                            "$ref": "#/components/schemas/Facility"
                        }
                    },
                    "assignedUsers": {
                        "type": "array",
                        "example": ["1", "2", "3"],
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "expireAt": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "createdByUserId": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "required": [
                    "id",
                    "scopeFacility",
                    "assignedUsers",
                    "createdAt",
                    "expireAt",
                    "createdByUserId"
                ],
                "xml": {
                    "name": "AuthorizationExtendedFacilities"
                }
            },
            "SuperId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "pin": {
                        "type": "string",
                        "example": "1234"
                    },
                    "secret": {
                        "type": "string",
                        "example": "=SID==my-little-secret"
                    },
                    "studentId": {
                        "type": "string",
                        "example": "1"
                    },
                    "identityCardId": {
                        "type": "string",
                        "example": "1"
                    },
                    "userId": {
                        "type": "string",
                        "example": "1"
                    },
                    "validTo": {
                        "type": "number",
                        "example": 1577836800000
                    }
                },
                "required": ["id", "secret", "userId", "validTo"],
                "xml": {
                    "name": "SuperId"
                }
            },
            "Challenge": {
                "type": "object",
                "properties": {
                    "challengeId": {
                        "type": "string",
                        "example": "=SID==my-little-secret"
                    },
                    "createdAt": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "validTo": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "superIdId": {
                        "type": "string",
                        "example": "1"
                    }
                },
                "required": [
                    "challengeId",
                    "createdAt",
                    "validTo",
                    "superIdId"
                ],
                "xml": {
                    "name": "Challenge"
                }
            },
            "FacilityOccupancy": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "isOccupied": {
                        "type": "boolean",
                        "example": true
                    },
                    "facilityId": {
                        "type": "string",
                        "example": "1"
                    },
                    "facility": {
                        "xml": {
                            "name": "facility"
                        },
                        "$ref": "#/components/schemas/Facility"
                    },
                    "createdAt": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "relatedEntryId": {
                        "type": "string",
                        "example": "2"
                    }
                },
                "required": [
                    "id",
                    "isOccupied",
                    "facilityId",
                    "facility",
                    "createdAt",
                    "relatedEntryId"
                ],
                "xml": {
                    "name": "FacilityOccupancy"
                }
            },
            "Entry": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "authorizationId": {
                        "type": "string",
                        "example": "1"
                    },
                    "occupierId": {
                        "type": "string",
                        "example": "1"
                    },
                    "authorizedById": {
                        "type": "string",
                        "example": "1"
                    },
                    "authorizedBy": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "example": "hello@kzakrzewski.pl"
                            }
                        },
                        "required": ["email"]
                    },
                    "occupier": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "example": "hello@kzakrzewski.pl"
                            }
                        },
                        "required": ["email"]
                    },
                    "entryAt": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "releaseAt": {
                        "type": "number",
                        "example": 1577836800000
                    },
                    "relatedOccupancy": {
                        "type": "array",
                        "items": {
                            "xml": {
                                "name": "facilityoccupancy"
                            },
                            "$ref": "#/components/schemas/FacilityOccupancy"
                        }
                    }
                },
                "required": [
                    "id",
                    "occupierId",
                    "authorizedById",
                    "authorizedBy",
                    "occupier",
                    "entryAt",
                    "relatedOccupancy"
                ],
                "xml": {
                    "name": "Entry"
                }
            }
        }
    }
}
